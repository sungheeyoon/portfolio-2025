name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      
      - name: Remove conflicting config file
        run: |
          if [ -f "next.config.js" ]; then
            echo "Removing conflicting next.config.js file"
            rm next.config.js
          fi
          echo "Using next.config.ts file:"
          cat next.config.ts
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build with Next.js
        run: |
          echo "Starting build process..."
          echo "GITHUB_ACTIONS environment: $GITHUB_ACTIONS"
          echo "NODE_ENV: $NODE_ENV"
          cat next.config.ts
          npm run build
          echo "Build completed, checking results..."
        env:
          NODE_ENV: production
          GITHUB_ACTIONS: true
      
      - name: List root directory after build
        run: |
          echo "Root directory contents:"
          ls -la
          echo "Checking for common build output directories:"
          for dir in out dist build .next; do
            if [ -d "$dir" ]; then
              echo "$dir directory exists:"
              ls -la "$dir/"
            else
              echo "$dir directory does not exist"
            fi
          done
      
      - name: Check if out directory exists
        run: |
          if [ -d "out" ]; then
            echo "out directory exists, proceeding with upload"
            ls -la out/
            echo "Checking basePath in HTML:"
            head -20 out/index.html | grep -i "portfolio-2025\|/_next" || echo "No basePath found in HTML"
          else
            echo "ERROR: out directory does not exist!"
            echo "Build may have failed or configuration issue"
            exit 1
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4